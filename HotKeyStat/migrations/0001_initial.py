# -*- coding: utf-8 -*-
# Generated by Django 1.11.10 on 2018-02-12 12:02
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Block',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('num', models.PositiveIntegerField(verbose_name='Block number block in the group')),
                ('name', models.CharField(max_length=100, verbose_name='Block name')),
                ('key_max', models.PositiveIntegerField(verbose_name='Maximum number of keys per block')),
                ('number', models.CharField(max_length=5, unique=True, verbose_name='Block id')),
                ('parent', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='HotKeyStat.Block', verbose_name='Parent block')),
            ],
            options={
                'verbose_name': 'Block',
                'verbose_name_plural': 'Blocks',
                'ordering': ('num', 'name'),
            },
        ),
        migrations.CreateModel(
            name='Learner',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('surname', models.CharField(max_length=100, verbose_name='Surname')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('email', models.CharField(max_length=50, verbose_name='E-mail')),
            ],
            options={
                'verbose_name': 'Learner',
                'verbose_name_plural': 'Learners',
                'ordering': ('org', 'surname', 'name'),
            },
        ),
        migrations.CreateModel(
            name='Manager',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'Manager',
                'verbose_name_plural': 'Managers',
            },
        ),
        migrations.CreateModel(
            name='Organizations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='The name organization')),
                ('is_work', models.BooleanField(default=False, help_text='He works at present', verbose_name='work')),
                ('org_parent', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='HotKeyStat.Organizations', verbose_name='Paternal organization')),
            ],
            options={
                'verbose_name': 'Organization',
                'verbose_name_plural': 'Organizations',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Result',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_result', models.DateField(verbose_name='Date of result')),
                ('key_count', models.PositiveIntegerField(default=0, verbose_name='number of keys')),
                ('correct', models.PositiveIntegerField(default=0, verbose_name='the number of correct answers')),
                ('time_result', models.FloatField(blank=True, null=True, verbose_name='result time')),
                ('block', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='HotKeyStat.Block', verbose_name='on the block')),
                ('learner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='HotKeyStat.Learner', verbose_name='Learner results')),
            ],
            options={
                'verbose_name': 'LearnerResult',
                'verbose_name_plural': 'LearnerResults',
                'ordering': ('block', 'learner'),
            },
        ),
        migrations.CreateModel(
            name='TypeResults',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, verbose_name='result type')),
                ('code', models.PositiveIntegerField(verbose_name='Code type result')),
            ],
            options={
                'verbose_name': 'TypeResults',
                'verbose_name_plural': 'TypeResults',
                'ordering': ('name',),
            },
        ),
        migrations.AddField(
            model_name='result',
            name='type_result',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='HotKeyStat.TypeResults', verbose_name='result type'),
        ),
        migrations.AddField(
            model_name='manager',
            name='org',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='HotKeyStat.Organizations', verbose_name='Organization'),
        ),
        migrations.AddField(
            model_name='manager',
            name='user',
            field=models.ForeignKey(help_text='Id django-user', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='user id'),
        ),
        migrations.AddField(
            model_name='learner',
            name='org',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='HotKeyStat.Organizations', verbose_name='Organization'),
        ),
        migrations.AlterUniqueTogether(
            name='result',
            unique_together=set([('learner', 'block', 'type_result')]),
        ),
        migrations.AlterUniqueTogether(
            name='organizations',
            unique_together=set([('name',)]),
        ),
        migrations.AlterUniqueTogether(
            name='learner',
            unique_together=set([('surname', 'name', 'email', 'org')]),
        ),
    ]
